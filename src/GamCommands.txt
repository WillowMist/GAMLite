# Configuration
def SetGlobalVariables(configFile, sectionName=None, config=None, save=False, verify=False):
configFile - full path to gam.cfg
sectionName - optional section in gam.cfg
config - dictionary of keyword-value pairs, {"debug_level: "1"}
save - should changes be saved
verify - should config file be displayed

# APIs
from gam import gam
from gamlib import glapi as API

ALERTCENTER = 'alertcenter'
CALENDAR = 'calendar'
CLASSROOM = 'classroom'
CLOUDPRINT = 'cloudprint'
CONTACTS = 'contacts'
DATATRANSFER = 'datatransfer'
DIRECTORY = 'directory'
DRIVE = 'drive'
DRIVE3 = 'drive3'
DRIVEACTIVITY = 'driveactivity'
EMAIL_AUDIT = 'email-audit'
GMAIL = 'gmail'
GROUPSMIGRATION = 'groupsmigration'
GROUPSSETTINGS = 'groupssettings'
LICENSING = 'licensing'
OAUTH2 = 'oauth2'
PEOPLE = 'people'
PUBSUB = 'pubsub'
REPORTS = 'reports'
RESELLER = 'reseller'
SHEETS = 'sheets'
SITES = 'sites'
SITEVERIFICATION = 'siteVerification'
STORAGE = 'storage'
VAULT = 'vault'

# Client Authentication
def buildGAPIObject(api):
gapiDirObj = gam.buildGAPIObject(API.DIRECTORY)

None is returned on an error
Pass the returned value as the first argument to all client API calls

# Service Account Authentication
def buildGAPIServiceObject(api, user):
gapiDriveObj = gam.buildGAPIServiceObject(API.DRIVE3, 'user@domain.com')

None is returned on an error
Pass the returned value as the first argument to all service account API calls

# API arguments
Named arguments are required.
**kwargs represents other arguments; see the API documentation.

Many/most API calls take a `fields` argument; this is a comma separated list of field names.
For top-level fields, specify the field name, e.g., primaryEmail
For sub-level fields, specify top level field name and the sub-level field name(s), e.g., name(givenName,familyName)

Many of the List APIs take a `pageToken` argument, do not specify it, GAMLite will automatically handle it.

# Directory API

def ASPsDelete(gapiDirObj, userKey, codeId):
https://developers.google.com/admin-sdk/directory/v1/reference/asps/delete

def ASPsList(gapiDirObj, userKey, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/asps/list

def ChromeosdevicesAction(gapiDirObj, customerId, resourceId, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/chromeosdevices/action

def ChromeosdevicesGet(gapiDirObj, customerId, deviceId, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/chromeosdevices/get

def ChromeosdevicesList(gapiDirObj, customerId, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/chromeosdevices/list

def ChromeosdevicesMoveDevicesToOu(gapiDirObj, customerId, orgUnitPath, deviceIds):
https://developers.google.com/admin-sdk/directory/v1/reference/chromeosdevices/moveDevicesToOu

def ChromeosdevicesUpdate(gapiDirObj, customerId, deviceId, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/chromeosdevices/update

def CustomersGet(gapiDirObj, customerKey, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/customers/get

def CustomersPatch(gapiDirObj, customerKey, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/customers/patch

def DomainsDelete(gapiDirObj, customer, domainName):
https://developers.google.com/admin-sdk/directory/v1/reference/domains/delete

def DomainsGet(gapiDirObj, customer, domainName, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/domains/get

def DomainsInsert(gapiDirObj, customer, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/domains/insert

def DomainsList(gapiDirObj, customer, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/domains/list

def DomainAliasesDelete(gapiDirObj, customer, domainAliasName):
https://developers.google.com/admin-sdk/directory/v1/reference/domainAliases/delete

def DomainAliasesGet(gapiDirObj, customer, domainAliasName, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/domainAliases/get

def DomainAliasesInsert(gapiDirObj, customer, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/domainAliases/insert

def DomainAliasesList(gapiDirObj, customer, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/domainAliases/list

def GroupsDelete(gapiDirObj, groupKey):
https://developers.google.com/admin-sdk/directory/v1/reference/domainAliases/list

def GroupsGet(gapiDirObj, groupKey, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/groups/get

def GroupsInsert(gapiDirObj, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/groups/insert

def GroupsList(gapiDirObj, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/groups/list

def GroupsUpdate(gapiDirObj, groupKey, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/groups/update

def GroupsAliasesDelete(gapiDirObj, groupKey, alias):
https://developers.google.com/admin-sdk/directory/v1/reference/groups/aliases/delete

def GroupsAliasesInsert(gapiDirObj, groupKey, alias, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/groups/aliases/insert

def GroupsAliasesList(gapiDirObj, groupKey, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/groups/aliases/list

def MembersDelete(gapiDirObj, groupKey, memberKey):
https://developers.google.com/admin-sdk/directory/v1/reference/groups/aliases/list

def MembersGet(gapiDirObj, groupKey, memberKey, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/members/get

def MembersInsert(gapiDirObj, groupKey, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/members/insert

def MembersList(gapiDirObj, groupKey, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/members/list

def MembersPatch(gapiDirObj, groupKey, memberKey, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/members/patch

def MobiledevicesAction(gapiDirObj, customerId, resourceId, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/mobiledevices/action

def MobiledevicesDelete(gapiDirObj, customerId, resourceid):
https://developers.google.com/admin-sdk/directory/v1/reference/mobiledevices/delete

def MobiledevicesGet(gapiDirObj, customerId, resourceid, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/mobiledevices/get

def MobiledevicesList(gapiDirObj, customerId, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/mobiledevices/list

def OrgunitsDelete(gapiDirObj, customerId, orgUnitPath):
https://developers.google.com/admin-sdk/directory/v1/reference/mobiledevices/list

def OrgunitsGet(gapiDirObj, customerId, orgUnitPath, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/orgunits/get

def OrgunitsInsert(gapiDirObj, customerId, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/orgunits/get

def OrgunitsList(gapiDirObj, customerId, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/orgunits/list

def OrgunitsUpdate(gapiDirObj, customerId, orgUnitPath, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/orgunits/update

def PrivilegesList(gapiDirObj, customer, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/privileges/list

def ResourcesBuildingsDelete(gapiDirObj, customer, buildingId):
https://developers.google.com/admin-sdk/directory/v1/reference/resources/buildings/delete

def ResourcesBuildingsGet(gapiDirObj, customer, buildingId, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/resources/buildings/get

def ResourcesBuildingsInsert(gapiDirObj, customer, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/resources/buildings/insert

def ResourcesBuildingsList(gapiDirObj, customer, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/resources/buildings/list

def ResourcesBuildingsPatch(gapiDirObj, customer, buildingId, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/resources/buildings/patch

def ResourcesCalendarsDelete(gapiDirObj, customer, calendarResourceId):
https://developers.google.com/admin-sdk/directory/v1/reference/resources/calendars/delete

def ResourcesCalendarsGet(gapiDirObj, customer, calendarResourceId, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/resources/calendars/get

def ResourcesCalendarsInsert(gapiDirObj, customer, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/resources/calendars/insert

def ResourcesCalendarsList(gapiDirObj, customer, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/resources/calendars/list

def ResourcesCalendarsPatch(gapiDirObj, customer, calendarResourceId, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/resources/calendars/patch

def ResourcesFeaturesDelete(gapiDirObj, customer, featureKey):
https://developers.google.com/admin-sdk/directory/v1/reference/resources/features/delete

def ResourcesFeaturesGet(gapiDirObj, customer, featureKey, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/resources/features/get

def ResourcesFeaturesInsert(gapiDirObj, customer, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/resources/features/insert

def ResourcesFeaturesList(gapiDirObj, customer, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/resources/features/list

def ResourcesFeaturesRename(gapiDirObj, customer, oldName, newName):
https://developers.google.com/admin-sdk/directory/v1/reference/resources/features/rename

def RoleAssignmentsDelete(gapiDirObj, customer, roleAssignmentId):
https://developers.google.com/admin-sdk/directory/v1/reference/roleAssignments/delete

def RoleAssignmentsGet(gapiDirObj, customer, roleAssignmentId):
https://developers.google.com/admin-sdk/directory/v1/reference/roleAssignments/get

def RoleAssignmentsInsert(gapiDirObj, customer, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/roleAssignments/insert

def RoleAssignmentsList(gapiDirObj, customer, userKey, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/roleAssignments/list

def RolesList(gapiDirObj, customer, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/roles/list

def SchemasDelete(gapiDirObj, customerId, schemaKey):
https://developers.google.com/admin-sdk/directory/v1/reference/schemas/delete

def SchemasGet(gapiDirObj, customerId, schemaKey, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/schemas/get

def SchemasInsert(gapiDirObj, customerId, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/schemas/insert

def SchemasList(gapiDirObj, customerId, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/schemas/list

def SchemasUpdate(gapiDirObj, customerId, schemaKey, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/schemas/update

def TokensDelete(gapiDirObj, userKey, clientId):
https://developers.google.com/admin-sdk/directory/v1/reference/tokens/delete

def TokensList(gapiDirObj, userKey, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/tokens/list

def UsersDelete(gapiDirObj, userKey):
https://developers.google.com/admin-sdk/directory/v1/reference/users/delete

def UsersGet(gapiDirObj, userKey, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/users/get

def UsersInsert(gapiDirObj, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/users/insert

def UsersList(gapiDirObj, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/users/list

def UsersUndelete(gapiDirObj, userUID, orgUnitPath):
https://developers.google.com/admin-sdk/directory/v1/reference/users/undelete

def UsersUpdate(gapiDirObj, userKey, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/users/update

def UsersAliasesDelete(gapiDirObj, userKey, alias):
https://developers.google.com/admin-sdk/directory/v1/reference/users/aliases/delete

def UsersAliasesInsert(gapiDirObj, userKey, alias, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/users/aliases/insert

def UsersAliasesList(gapiDirObj, userKey, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/users/aliases/list

def VerificationCodesGenerate(gapiDirObj, userKey):
https://developers.google.com/admin-sdk/directory/v1/reference/verificationCodes/generate

def VerificationCodesInvalidate(gapiDirObj, userKey):
https://developers.google.com/admin-sdk/directory/v1/reference/verificationCodes/invalidate

def VerificationCodesList(gapiDirObj, userKey, **kwargs):
https://developers.google.com/admin-sdk/directory/v1/reference/verificationCodes/list

# Drive v3 API

def DriveAbout(gapiDriveObj, **kwargs):
https://developers.google.com/drive/api/v3/reference/about/get

def DriveFilesCreate(gapiDriveObj, **kwargs):
https://developers.google.com/drive/api/v3/reference/files/create

def DriveFilesCopy(gapiDriveObj, fileId, **kwargs):
https://developers.google.com/drive/api/v3/reference/files/copy

def DriveFilesDelete(gapiDriveObj, fileId, **kwargs):
https://developers.google.com/drive/api/v3/reference/files/delete

def DriveFilesEmptyTrash(gapiDriveObj):
https://developers.google.com/drive/api/v3/reference/files/emptyTrash

def DriveFilesGet(gapiDriveObj, fileId, **kwargs):
https://developers.google.com/drive/api/v3/reference/files/get

def DriveFilesList(gapiDriveObj, **kwargs):
https://developers.google.com/drive/api/v3/reference/files/list

def DriveFilesUpdate(gapiDriveObj, fileId, **kwargs):
https://developers.google.com/drive/api/v3/reference/files/update

def DrivePermissionsCreate(gapiDriveObj, fileId, **kwargs):
https://developers.google.com/drive/api/v3/reference/permissions/create

def DrivePermissionsDelete(gapiDriveObj, fileId, permissionId, **kwargs):
https://developers.google.com/drive/api/v3/reference/permissions/delete

def DrivePermissionsGet(gapiDriveObj, fileId, permissionId, **kwargs):
https://developers.google.com/drive/api/v3/reference/permissions/get

def DrivePermissionsList(gapiDriveObj, fileId, **kwargs):
https://developers.google.com/drive/api/v3/reference/permissions/list

def DrivePermissionsUpdate(gapiDriveObj, fileId, permissionId, **kwargs):
https://developers.google.com/drive/api/v3/reference/permissions/update

# Gmail API

def GmailUsersGetProfile(gapiGmailObj):
https://developers.google.com/gmail/api/v1/reference/users/getProfile

def GmailDraftsCreate(gapiGmailObj, uploadType, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/drafts/create

def GmailDraftsDelete(gapiGmailObj, draftId):
https://developers.google.com/gmail/api/v1/reference/users/drafts/delete

def GmailDraftsGet(gapiGmailObj, draftId, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/drafts/get

def GmailDraftsList(gapiGmailObj, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/drafts/list

def GmailDraftsSend(gapiGmailObj, uploadType, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/drafts/send

def GmailDraftsUpdate(gapiGmailObj, draftId, uploadType, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/drafts/update

def GmailHistoryList(gapiGmailObj, startHistoryId, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/history/list

def GmailLabelsCreate(gapiGmailObj, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/labels/create

def GmailLabelsDelete(gapiGmailObj, labelId):
https://developers.google.com/gmail/api/v1/reference/users/labels/delete

def GmailLabelsGet(gapiGmailObj, labelId, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/labels/get

def GmailLabelsList(gapiGmailObj, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/labels/list

def GmailLabelsPatch(gapiGmailObj, labelId, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/labels/patch

def GmailLabelsUpdate(gapiGmailObj, labelId, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/labels/update

def GmailMessagesBatchDelete(gapiGmailObj, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/messages/batchDelete

def GmailMessagesBatchModify(gapiGmailObj, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/messages/batchModify

def GmailMessagesDelete(gapiGmailObj, messageId):
https://developers.google.com/gmail/api/v1/reference/users/messages/delete

def GmailMessagesGet(gapiGmailObj, messageId, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/messages/get

def GmailMessagesImport(gapiGmailObj, uploadType, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/messages/import

def GmailMessagesInsert(gapiGmailObj, uploadType, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/messages/insert

def GmailMessagesList(gapiGmailObj, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/messages/list

def GmailMessagesModify(gapiGmailObj, messageId, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/messages/modify

def GmailMessagesSend(gapiGmailObj, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/messages/send

def GmailMessagesTrash(gapiGmailObj, messageId, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/messages/trash

def GmailMessagesUntrash(gapiGmailObj, messageId, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/messages/untrash

def GmailMessagesAttachmentsGet(gapiGmailObj, messageId, attachmentId, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/messages/attachments/get

def GmailSettingsGetAutoForwarding(gapiGmailObj, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/getAutoForwarding

def GmailSettingsGetImap(gapiGmailObj, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/getImap

def GmailSettingsGetLanguage(gapiGmailObj, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/getLanguage

def GmailSettingsGetPop(gapiGmailObj, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/getPop

def GmailSettingsGetVacation(gapiGmailObj, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/getVacation

def GmailSettingsUpdateAutoForwarding(gapiGmailObj, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/updateAutoForwarding

def GmailSettingsUpdateImap(gapiGmailObj, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/updateImap

def GmailSettingsUpdateLanguage(gapiGmailObj, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/updateLanguage

def GmailSettingsUpdatePop(gapiGmailObj, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/updatePop

def GmailSettingsUpdateVacation(gapiGmailObj, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/updateVacation

def GmailSettingsDelegatesCreate(gapiGmailObj, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/delegates/create

def GmailSettingsDelegatesDelete(gapiGmailObj, delegateEmail):
https://developers.google.com/gmail/api/v1/reference/users/settings/delegatesdelete

def GmailSettingsDelegatesGet(gapiGmailObj, delegateEmail, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/delegates/get

def GmailSettingsDelegatesList(gapiGmailObj, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/delegates/list

def GmailSettingsFiltersCreate(gapiGmailObj, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/filters/create

def GmailSettingsFiltersDelete(gapiGmailObj, filterId):
https://developers.google.com/gmail/api/v1/reference/users/settings/filters/delete

def GmailSettingsFiltersGet(gapiGmailObj, filterId, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/filters/get

def GmailSettingsFiltersList(gapiGmailObj, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/filters/list

def GmailSettingsForwardingAddressesCreate(gapiGmailObj, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/forwardingAddresses/create

def GmailSettingsForwardingAddressesDelete(gapiGmailObj, forwardingEmail):
https://developers.google.com/gmail/api/v1/reference/users/settings/forwardingAddresses/delete

def GmailSettingsForwardingAddressesGet(gapiGmailObj, forwardingEmail, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/forwardingAddresses/get

def GmailSettingsForwardingAddressesList(gapiGmailObj, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/forwardingAddresses/list

def GmailSettingsSendAsCreate(gapiGmailObj, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/sendAs/create

def GmailSettingsSendAsDelete(gapiGmailObj, sendAsEmail):
https://developers.google.com/gmail/api/v1/reference/users/settings/sendAs/delete

def GmailSettingsSendAsGet(gapiGmailObj, sendAsEmail, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/sendAs/get

def GmailSettingsSendAsList(gapiGmailObj, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/sendAs/list

def GmailSettingsSendAsPatch(gapiGmailObj, sendAsEmail, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/sendAs/patch

def GmailSettingsSendAsUpdate(gapiGmailObj, sendAsEmail, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/sendAs/update

def GmailSettingsSendAsVerify(gapiGmailObj, sendAsEmail):
https://developers.google.com/gmail/api/v1/reference/users/settings/sendAs/verify

def GmailSettingsSmimeInfoDelete(gapiGmailObj, sendAsEmail, smimeInfoId):
https://developers.google.com/gmail/api/v1/reference/users/settings/sendAs/smimeInfo/delete

def GmailSettingsSmimeInfoGet(gapiGmailObj, sendAsEmail, smimeInfoId, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/sendAs/smimeInfo/get

def GmailSettingsSmimeInfoInsert(gapiGmailObj, sendAsEmail, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/sendAs/smimeInfo/insert

def GmailSettingsSmimeInfoList(gapiGmailObj, sendAsEmail, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/settings/sendAs/smimeInfo/list

def GmailSettingsSmimeInfoSetDefault(gapiGmailObj, sendAsEmail, smimeInfoId):
https://developers.google.com/gmail/api/v1/reference/users/settings/sendAs/smimeInfo/setDefault

def GmailThreadsDelete(gapiGmailObj, threadId):
https://developers.google.com/gmail/api/v1/reference/users/threads/delete

def GmailThreadsGet(gapiGmailObj, threadId, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/threads/get

def GmailThreadsList(gapiGmailObj, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/threads/list

def GmailThreadsModify(gapiGmailObj, threadId, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/threads/modify

def GmailThreadsTrash(gapiGmailObj, threadId, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/threads/trash

def GmailThreadsUntrash(gapiGmailObj, threadId, **kwargs):
https://developers.google.com/gmail/api/v1/reference/users/threads/untrash
